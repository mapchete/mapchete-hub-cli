stages:
  - build
  - test
  - package

# full test suite #
###################

test_mhub:
  image: docker/compose:1.26.0
  stage: test
  timeout: 30m
  retry: 2
  before_script:
    - export MHUB_PORT=$(( 5000 + $RANDOM % 1000 ))
  script:
    # run tests
    - echo "run mhub on port ${MHUB_PORT}"
    - >
      docker-compose \
        -p $CI_JOB_ID \
        -f docker-compose.yml \
        -f docker-compose.test.yml \
        up \
        --exit-code-from mhub_tester \
        --build

  after_script:
    - >
      docker-compose \
        -p $CI_JOB_ID \
        -f docker-compose.yml \
        -f docker-compose.test.yml \
        down \
        -v \
        --rmi all \
        --remove-orphans \
      || true
    - >
      docker-compose \
        -p $CI_JOB_ID \
        -f docker-compose.yml \
        -f docker-compose.test.yml \
        rm -fv \
      || true


# python packaging & EOX PyPy releases #
########################################

# build python packages
build_python:
  image: python:3.8-slim-buster
  stage: build
  artifacts:
    paths:
      - dist/
  script:
    - pip wheel . --no-deps --wheel-dir dist/
    - python setup.py sdist

# test python packages
test_wheel:
  image: python:3.8-slim-buster
  needs: ["build_python"]
  stage: test
  script:
    - pip install dist/*.whl
    - ls
    - mhub --help

test_tar:
  image: python:3.8-slim-buster
  needs: ["build_python"]
  stage: test
  script:
    - pip install dist/*.tar.gz
    - mhub --help

package:
  image: python:3.8-slim-buster
  stage: package
  script:
    - pip install twine
    - python -m twine upload --repository-url https://gitlab.eox.at/api/v4/projects/255/packages/pypi dist/mapchete_hub_cli*
  only:
    - tags
